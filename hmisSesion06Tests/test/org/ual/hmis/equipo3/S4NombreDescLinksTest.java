package org.ual.hmis.equipo3;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class S4NombreDescLinksTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() throws Exception {
	   // Browser selector
	   int browser= 0; // 0: firefox, 1: chrome,...
	   boolean headless = false;

	   switch (browser) {
	   case 0:  // firefox
		   // Firefox
		   // Descargar geckodriver de https://github.com/mozilla/geckodriver/releases
		   // Descomprimir el archivo geckodriver.exe en la carpeta drivers
//		   System.setProperty("webdriver.gecko.driver",  "drivers/geckodriver.exe");
		   FirefoxOptions firefoxOptions = new FirefoxOptions();
		   FirefoxProfile firefoxProfile = new FirefoxProfile();
		   firefoxProfile.setPreference("intl.accept_languages", "es-ES");
		   firefoxOptions.setProfile(firefoxProfile);
		   if (headless) firefoxOptions.setHeadless(headless);
		   driver = new FirefoxDriver(firefoxOptions);

	   break;
	   case 1: // chrome
		   // Chrome
		   // Descargar Chromedriver de https://chromedriver.chromium.org/downloads
		   // Descomprimir el archivo chromedriver.exe en la carpeta drivers

//		   System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe");
		   ChromeOptions chromeOptions = new ChromeOptions();
		   chromeOptions.addArguments("--lang= es");
		   if (headless) chromeOptions.setHeadless(headless);
		   chromeOptions.addArguments("window-size=1920,1080");
		   driver = new ChromeDriver(chromeOptions);

		   break;

	   default:
		   	fail("Please select a browser");
		   	break;
	   }
	   js = (JavascriptExecutor) driver;
	   vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void s4NombreDescLinks() {
    // Test name: S4_NombreDescLinks
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://hmis20-cc002.azurewebsites.net/");
    // 2 | setWindowSize | 974x1040 | 
    driver.manage().window().setSize(new Dimension(974, 1040));
    // 3 | assertText | linkText=Equipo 3 | Equipo 3
    assertThat(driver.findElement(By.linkText("Equipo 3")).getText(), is("Equipo 3"));
    // 4 | click | css=.fa-caret-down | 
    driver.findElement(By.cssSelector(".fa-caret-down")).click();
    // 5 | assertText | css=.col-lg-12 .mx-auto | Esto es una web realizada para la Sesion 4 a modo de ejemplo, para trabajar en equipo con Github. Realizada el Grupo 3 formado por Ángel Gómez Espinosa (responsable) y Cristian David Casado (desarrollador).
    assertThat(driver.findElement(By.cssSelector(".col-lg-12 .mx-auto")).getText(), is("Esto es una web realizada para la Sesion 4 a modo de ejemplo, para trabajar en equipo con Github. Realizada el Grupo 3 formado por Ángel Gómez Espinosa (responsable) y Cristian David Casado (desarrollador)."));
    // 6 | click | linkText=Enlaces | 
    driver.findElement(By.linkText("Enlaces")).click();
    // 7 | assertText | css=.row > .text-center > .mx-auto | - Página personal de Ángel Gómez Espinosa\n- Página personal de Cristian David Casado\n- GitHub repositorio de este proyecto\n- GitHub fork de este proyecto\n- GitHub official documentation\n‐ HMIS organization on GitHub\n‐ Git book\n‐ Azure portal\n‐ Azure official documentation
    assertThat(driver.findElement(By.cssSelector(".row > .text-center > .mx-auto")).getText(), is("- Página personal de Ángel Gómez Espinosa\n- Página personal de Cristian David Casado\n- GitHub repositorio de este proyecto\n- GitHub fork de este proyecto\n- GitHub official documentation\n‐ HMIS organization on GitHub\n‐ Git book\n‐ Azure portal\n‐ Azure official documentation"));
  }
}
